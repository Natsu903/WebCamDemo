#pragma once
#include <mutex>
#include <vector>

struct AVCodecContext;
struct AVFrame;
struct AVPacket;

class Encode
{
public:
	/**
	 * 初始化编码器上下文.
	 * 
	 * \param codec_id 传入编码器id如AV_CODEC_ID_H264
	 * \return 返回配置好的AVCodecContext指针
	 */
	static AVCodecContext* Create(int codec_id);

	/**
	 * 将编码器上下文存储到类中.
	 * 
	 * \param c
	 */
	void set_c(AVCodecContext* c);

	/**
	 * 设置ffmpeg编码器选项参数.
	 * 
	 * \param key 参数类型
	 * \param val 参数
	 * \return 成功返回true失败返回false
	 */
	bool SetOpt(const char* key, const char* val);
	bool SetOpt(const char* key, int val);

	/**
	 * 初始化编解码器上下文并与具体的编解码器关联.
	 * 
	 * \return 成功返回true
	 */
	bool Open();

	AVFrame* CreateFrame();

	/**
	 * 处理帧画面.
	 * 
	 * \param frame创建好的frame
	 * \return 处理成功则返回pkt，处理到结尾返回nullptr，处理失败打印错误信息
	 */
	AVPacket* DoEncode(const AVFrame* frame);

	std::vector<AVPacket*>End();

private:
	AVCodecContext* c_ = nullptr;
	std::mutex mux_;
};

